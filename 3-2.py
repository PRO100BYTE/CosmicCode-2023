t = int(input()) # время гонки
v1, v2 = map(int, input().split()) # начальные скорости
n1, n2 = map(int, input().split()) # число ускорений и замедлений

# функция для расчета расстояния, пройденного космическим аппаратом
def distance(v, a, t):
    return v*t + 0.5*a*t**2

# инициализация начальных значений
d1 = 0 # расстояние, пройденное первым аппаратом
d2 = 0 # расстояние, пройденное вторым аппаратом
t_prev_1 = 0 # время на предыдущем ускорении/замедлении для первого аппарата
t_prev_2 = 0 # время на предыдущем ускорении/замедлении для второго аппарата
v_prev_1 = v1 # скорость на предыдущем ускорении/замедлении для первого аппарата
v_prev_2 = v2 # скорость на предыдущем ускорении/замедлении для второго аппарата

# обработка ускорений/замедлений для первого аппарата
for i in range(n1):
    t_i, a_i = map(int, input().split())
    d1 += distance(v_prev_1, a_i, t_i - t_prev_1)
    v_i = v_prev_1 + a_i*(t_i - t_prev_1)
    v_prev_1 = v_i
    t_prev_1 = t_i

# обработка ускорений/замедлений для второго аппарата
for i in range(n2):
    t_i, a_i = map(int, input().split())
    d2 += distance(v_prev_2, a_i, t_i - t_prev_2)
    v_i = v_prev_2 + a_i*(t_i - t_prev_2)
    v_prev_2 = v_i
    t_prev_2 = t_i

# расчет расстояний, пройденных после последнего ускорения/замедления и до конца гонки
d1 += distance(v_prev_1, 0, t - t_prev_1)
d2 += distance(v_prev_2, 0, t - t_prev_2)

# вывод результата
if d1 > d2:
    print("1 - {:.2f} м".format(d1))
else:
    print("2 - {:.2f} м".format(d2))